#!/usr/bin/env node

/**
 * Agentic QE MCP Server Entry Point
 *
 * Starts the Model Context Protocol server for Claude Code integration.
 * This server provides MCP tools for test generation, coverage analysis,
 * quality gates, and more.
 */

const path = require('path');
const fs = require('fs');

// Check Node.js version
const MIN_NODE_VERSION = 18;
const currentVersion = parseInt(process.versions.node.split('.')[0]);
if (currentVersion < MIN_NODE_VERSION) {
  console.error(`❌ Error: Node.js ${MIN_NODE_VERSION}+ required. Current: ${process.version}`);
  console.error(`Please upgrade Node.js: https://nodejs.org/`);
  process.exit(1);
}

// Determine MCP server path
const mcpServerPath = path.join(__dirname, '..', 'dist', 'mcp', 'start.js');

// Check if build exists
if (!fs.existsSync(mcpServerPath)) {
  console.error('❌ Error: MCP server not built. Please run: npm run build');
  console.error('');
  console.error('Build steps:');
  console.error('  cd ' + path.join(__dirname, '..'));
  console.error('  npm install');
  console.error('  npm run build');
  console.error('');
  console.error('After building, try again: aqe-mcp');
  process.exit(1);
}

// Start the MCP server
try {
  require(mcpServerPath);
} catch (error) {
  console.error('❌ Error starting MCP server:', error.message);

  if (process.env.DEBUG || process.env.VERBOSE) {
    console.error('');
    console.error('Debug information:');
    console.error('  MCP path:', mcpServerPath);
    console.error('  MCP exists:', fs.existsSync(mcpServerPath));
    console.error('  Node version:', process.version);
    console.error('  Platform:', process.platform);
    console.error('  Stack trace:', error.stack);
  }

  console.error('');
  console.error('Troubleshooting:');
  console.error('  1. Rebuild: npm run build');
  console.error('  2. Reinstall: npm install');
  console.error('  3. Check if build succeeded');
  console.error('');
  console.error('If the issue persists, please report at:');
  console.error('https://github.com/proffesor-for-testing/agentic-qe/issues');

  process.exit(1);
}
