version: '3.8'

services:
  agentic-qe-fleet:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic-qe-fleet
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - DB_TYPE=sqlite
      - DB_FILENAME=/app/data/fleet.db
      - API_PORT=3000
      - API_HOST=0.0.0.0
      - MAX_AGENTS=10
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - agentic-qe

  # Optional: PostgreSQL database for production use
  postgres:
    image: postgres:15-alpine
    container_name: agentic-qe-postgres
    environment:
      POSTGRES_DB: agentic_qe
      POSTGRES_USER: aqe_user
      POSTGRES_PASSWORD: secure_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - agentic-qe
    profiles:
      - postgres

  # Optional: Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: agentic-qe-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agentic-qe
    profiles:
      - redis

volumes:
  postgres_data:
  redis_data:

networks:
  agentic-qe:
    driver: bridge