{
  "timestamp": 1729584960000,
  "patterns": [
    {
      "name": "should add a new pet and return it with a generated ID",
      "type": "unit",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 3,
        "executionTime": 3,
        "method": "addPet",
        "category": "basic-functionality"
      }
    },
    {
      "name": "should auto-increment pet IDs correctly",
      "type": "unit",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 3,
        "executionTime": 1,
        "method": "addPet",
        "category": "id-management"
      }
    },
    {
      "name": "should handle all valid species types",
      "type": "unit",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 4,
        "executionTime": 1,
        "method": "addPet",
        "category": "data-validation"
      }
    },
    {
      "name": "should handle pets with age 0",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 2,
        "executionTime": 1,
        "method": "addPet",
        "category": "boundary-values"
      }
    },
    {
      "name": "should handle pets with very high age",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 2,
        "executionTime": 1,
        "method": "addPet",
        "category": "boundary-values"
      }
    },
    {
      "name": "should handle empty string name",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 2,
        "executionTime": 1,
        "method": "addPet",
        "category": "string-handling"
      }
    },
    {
      "name": "should handle very long pet names",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 2,
        "executionTime": 1,
        "method": "addPet",
        "category": "string-handling"
      }
    },
    {
      "name": "should handle special characters in pet name",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 12,
        "executionTime": 1,
        "method": "addPet",
        "category": "unicode-handling"
      }
    },
    {
      "name": "should maintain data integrity when adding multiple pets rapidly",
      "type": "performance",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 4,
        "executionTime": 1,
        "method": "addPet",
        "category": "concurrent-operations"
      }
    },
    {
      "name": "should return undefined for non-existent ID",
      "type": "edge-case",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 1,
        "executionTime": 1,
        "method": "getPet",
        "category": "error-handling"
      }
    },
    {
      "name": "should handle large number of available pets",
      "type": "performance",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 2,
        "executionTime": 1,
        "method": "getAvailablePets",
        "category": "scalability"
      }
    },
    {
      "name": "should allow toggling availability multiple times",
      "type": "unit",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 3,
        "executionTime": 1,
        "method": "updateAvailability",
        "category": "state-management"
      }
    },
    {
      "name": "should handle large dataset efficiently",
      "type": "performance",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 4,
        "executionTime": 1,
        "method": "searchBySpecies",
        "category": "scalability"
      }
    },
    {
      "name": "should handle very large datasets without errors",
      "type": "performance",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 3,
        "executionTime": 2,
        "method": "multiple",
        "category": "memory-management"
      }
    },
    {
      "name": "should support complete pet lifecycle",
      "type": "integration",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 11,
        "executionTime": 1,
        "method": "multiple",
        "category": "workflow"
      }
    },
    {
      "name": "should support multi-species pet store management",
      "type": "integration",
      "confidence": 0.95,
      "metadata": {
        "framework": "jest",
        "coverage": 100,
        "assertions": 9,
        "executionTime": 1,
        "method": "multiple",
        "category": "complex-workflow"
      }
    }
  ],
  "metadata": {
    "framework": "jest",
    "project": "petstore-app",
    "version": "1.0.0",
    "agent": "qe-test-generator",
    "totalTests": 68,
    "totalPatterns": 16,
    "coverage": {
      "statements": 100,
      "branches": 100,
      "functions": 100,
      "lines": 100
    },
    "executionTime": 1184,
    "quicSyncEnabled": true,
    "vectorSearchReady": true,
    "neuralTrainingEnabled": true
  },
  "patternCategories": {
    "unit": 3,
    "edge-case": 6,
    "performance": 4,
    "integration": 2
  },
  "methodCoverage": {
    "addPet": 9,
    "getPet": 7,
    "getAvailablePets": 6,
    "updateAvailability": 9,
    "deletePet": 9,
    "searchBySpecies": 9,
    "getTotalCount": 7
  }
}
